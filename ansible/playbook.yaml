---

- name: Base
  hosts: all
  tasks:
    - name: Ping
      ping:

    - name: Enable Color Prompt
      lineinfile:
        dest: /root/.bashrc
        regexp: "^(#)?force_color_prompt"
        line: "force_color_prompt=yes"
        insertafter: EOF
        state: present

    - name: Install Aptitude Package
      apt:
        pkg: aptitude
        state: latest

    - name: Update and Upgrade Packages
      apt:
        upgrade: yes
        update_cache: yes

    - name: Install Base Packages
      apt:
        pkg: "{{ item }}"
        state: latest
      with_items:
        - tmux
        - multitail
        - colordiff
        - fping
        - htop
        - ncdu
        - moreutils
        - bmon
        - apt-transport-https
        - curl

- name: Master and Worker Nodes
  hosts: master,worker
  tasks:
    - name: Ping
      ping:

    - name: Add Kubernetes APT Key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg

    - name: Add Kubernetes APT Repository
      apt_repository:
        repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
        filename: "kubernetes"

    - name: Install Packages
      apt:
        pkg: "{{ item }}"
        state: latest
      with_items:
        - docker.io
        - kubelet
        - kubeadm
        - kubectl

- name: Master Node
  hosts: master
  tasks:
    - name: Ping
      ping:

    - name: Init Master
      command: "kubeadm init --pod-network-cidr=10.244.0.0/16"
      args:
        creates: "/etc/kubernetes/admin.conf"
      register: kubeadm_init_result

    - name: Configure Flannel CNI
      command: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.1/Documentation/kube-flannel.yml"
      environment:
        KUBECONFIG: "/etc/kubernetes/admin.conf"
      args:
        creates: "/etc/cni/net.d/10-flannel.conf"

- name: Worker Nodes
  hosts: worker
  tasks:
    - name: Ping
      ping:

    - name: Join Worker
      command: "{{ hostvars['master'].kubeadm_init_result.stdout_lines | last }}"
      args:
        creates: "/etc/kubernetes/bootstrap-kubelet.conf"
